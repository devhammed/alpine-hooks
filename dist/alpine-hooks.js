function h(e){e.magic("useHover",(s,{interceptor:u})=>u((n,r,t,i,a)=>{let o=n;return t(!1),o.addEventListener("mouseover",()=>{t(!0)}),o.addEventListener("mouseout",()=>{t(!1)}),r()}))}function l(e){e.magic("useFocus",(s,{interceptor:u})=>u((n,r,t,i,a)=>{let o=n;return t(!1),o.addEventListener("focus",()=>{t(!0)}),o.addEventListener("blur",()=>{t(!1)}),r()}))}function w(e){e.magic("useHash",(s,{interceptor:u,effect:n})=>u((r,t,i,a,o)=>{window.location.hash===""&&(window.location.hash=r);let c=window.location.hash||r;return i(c),window.addEventListener("hashchange",()=>{i(window.location.hash)}),n(()=>{let d=t();window.location.hash=d,i(d)}),c}))}function f(e){e.magic("useWindowSize",()=>()=>{let s=e.reactive({width:window.innerWidth,height:window.innerHeight});return window.addEventListener("resize",()=>{s.width=window.innerWidth,s.height=window.innerHeight}),s})}function g(e){e.magic("useIntersecting",(s,{interceptor:u})=>u((n,r,t)=>{let i=n instanceof Element?n:n.target,a=n.root instanceof Element||n.root instanceof Document?n.root:null,o=n.rootMargin||"0px",c=n.threshold||0,d=n.initial||!1;console.log("options",{target:i,root:a,rootMargin:o,threshold:c,initial:d});let m=new IntersectionObserver(([v])=>t(v.isIntersecting),{root:a,rootMargin:o,threshold:c});return t(d),m.observe(i),r()}))}function y(e){e.plugin(h),e.plugin(l),e.plugin(w),e.plugin(f),e.plugin(g)}export{y as default,l as useFocus,w as useHash,h as useHover,g as useIntersecting,f as useWindowSize};
//# sourceMappingURL=alpine-hooks.js.map
